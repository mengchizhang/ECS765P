import java.io.IOException;
import java.util.StringTokenizer;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;
import java.util.Locale;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.ArrayList;

public class hashtagmap extends Mapper<Object, Text, Text, IntWritable> { 
    private final IntWritable one = new IntWritable(1);
    private Text data = new Text();
	public  static ArrayList<String> countryName;
        public  static ArrayList<String> countryCode;

static boolean firstTime = false;

    public void map(Object key, Text value, Context context) throws IOException, InterruptedException {
        /*StringTokenizer itr = new StringTokenizer(value.toString(), "-- \t\n\r\f,.:;?![]'\"");
        while (itr.hasMoreTokens()) {
          data.set(itr.nextToken().toLowerCase());
          context.write(data, one);
        }*/

	String tweets[] = value.toString().split(";");
	countryCode = cCode();
	countryName = cName();
//	String hashtags[] = tweets[3];

	String hashtag =tweets[2].toString();
	hashtag = hashtag.toUpperCase();
	for(int i=0;i<countryCode.size();i++){
		
		if (hashtag.indexOf("TEAM" + countryCode.get(i).toUpperCase()) != -1 || hashtag.indexOf("GO" + countryCode.get(i).toUpperCase()) != -1) {
				data.set(countryCode.get(i));	
				context.write(data, one);
  			
		}

		firstTime = true;	
	}	
//	data.set();	
//	context.write(data, one);
    }



public static ArrayList<String> cCode(){

	if(!firstTime) {
		 String[] locales = Locale.getISOCountries();
		 ArrayList<String> countCode = new ArrayList<String>();
		 for (String countryCode : locales) {

			Locale obj = new Locale("", countryCode);
			countCode.add(obj.getCountry());
			//countCode.add(obj.getDisplayCountry());
			//System.out.println("Country Code = " + obj.getCountry());

		}
	
		//System.out.println("Done");
		return countCode;
	}

	return countryCode;
   }
	 
   public  static ArrayList<String> cName(){

	if(!firstTime) {
		 String[] locales = Locale.getISOCountries();
		 ArrayList<String> countName = new ArrayList<String>();
		 for (String countryCode : locales) {
			Locale obj = new Locale("", countryCode);
			//countCode.add(obj.getCountry());
			countName.add(obj.getDisplayCountry());
			//System.out.println("Country Code = " + obj.getCountry());
		}
                return countName;
	}

	return countryName;
}

}
